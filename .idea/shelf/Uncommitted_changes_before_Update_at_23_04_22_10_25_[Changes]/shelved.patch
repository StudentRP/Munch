Index: Munchkin/bin/engine/controller.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"\"\"\r\nController provudes backend logic to the view script and makes changes to variable library\r\nInitiates player personalisation and runs game cycle for each player fetching cards and initiation\r\neach scene of play\r\n\r\nContents functions:\r\n    rand * picks single player from list of players\r\n    varbinding * binds all player attribs to IPC script\r\n    dealhandler *\r\n\r\n\r\n\r\n\"\"\"\r\n\r\n\r\nfrom Munchkin.bin.players.playermodel import Player\r\nfrom Munchkin.bin.all_cards.table import dice # , cards\r\nfrom random import randint, choice\r\nimport bin.GUI.variables_library as library\r\nfrom itertools import cycle\r\n\r\nfrom bin.GUI.variables_library import cards\r\nprint('controller', id(library.cards))\r\nfrom time import sleep\r\n\r\n\r\n\r\n\r\n##################################################################\r\n# main loop\r\n##################################################################\r\n\"\"\" V4.0  \"\"\"\r\n\r\n\r\nclass PlayerSetUp:\r\n    \"\"\"class to determine number of players and hand to player order\"\"\"\r\n    card_from_engine = cards\r\n\r\n    def __init__(self):\r\n        self.cycle = 0 #needed?\r\n\r\n# meths associated to play setup\r\n\r\n    def active_player_creation(self):\r\n        \"\"\" calls Player.factory creating player instances\"\"\"\r\n        for person in range(library.StartVariables.new_players):\r\n            player = Player.factory()\r\n            library.GameObjects.session_players.append(player)\r\n        self.deal_handler(\"start\")\r\n\r\n    def player_name_gender(self, playerindex): # gui attrib, passes session_players index identifying specific instance\r\n        \"\"\"Gets player with list index and Sets name and gender to that player instance.\"\"\"\r\n        player = library.GameObjects.session_players[playerindex] #references a player objects from session_players\r\n        player.char_setup() # call to set name and gender of player instance.\r\n\r\n    def set_random_player(self):\r\n        \"\"\"Selects random player to start from session_players list. Binds player as active_player and calls\r\n        method to load all attributes of the player (player_attrib_ipc_updater(). parameter is optional but explicit)\"\"\"\r\n        player = choice(library.GameObjects.session_players) # selects random player from list of players\r\n        library.GameObjects.active_player = player # assigns the selected player to active player in gamevar for gui to see\r\n        library.GameObjects.message = f\"The dice has been rolled. Random player selected is {player.name.title()}\"\r\n        self.player_attrib_ipc_updater(player) # arg not needed. Calls method to set all attribs in in gamevar of player\r\n\r\n# class Game_Play:\r\n\r\n    def player_order(self, current_player): # called with gameVar rand_index\r\n        \"\"\"Triggered at end of turn. Note 1st player was random and assigned to active_player after player creation.\r\n        Current_player = active player\"\"\"\r\n        play = True # win condition need method that will check all players\r\n        player_gen = cycle(library.GameObjects.session_players) # generator function that cycles a list indefinitely\r\n        y = next(player_gen) # yields players from the list, at start this would be first item = p1.\r\n        while play:\r\n            if current_player == y and current_player.alive: # conditions to see if x==y (x= player, y=list item)\r\n                print(f\"Current player {current_player.name} turn ended\\n\")\r\n                library.GameObjects.active_player = next(player_gen) # binds next player to rand_player, (changes x)\r\n                self.player_attrib_ipc_updater(library.GameObjects.active_player) #  binds new player\r\n                print(f\"{library.GameObjects.active_player.name} has been binded\")\r\n                break\r\n            elif current_player == y and not current_player.alive and not library.Options.perm_death:\r\n                print(f\"print player {current_player} is dead\") # move in to conditional for perm-a-death\r\n                current_player.alive = True # resets player status ##########need per-a-death bit here\r\n                library.GameObjects.active_player = next(player_gen) # changes x without binding and moves to next player\r\n                continue\r\n            else:\r\n                print(f\"{y.name.title()} did not match. Searching for player in list\")\r\n                y = next(player_gen) # changes y to find commonality to x\r\n\r\n        library.GameObjects.message = f\"{library.GameObjects.active_player.name.title()}'s turn...\"\r\n\r\n    def player_attrib_ipc_updater(self, playerinst=library.GameObjects.active_player): # defaults to gamevar active_player player\r\n        \"\"\"Binds all player atribs to gameVar for current player activity. Can take param of a player or grab active_player.\"\"\"\r\n        library.PlayerAtribs.player_name = playerinst.name.title()\r\n        library.PlayerAtribs.player_gender = playerinst.gender.title()\r\n        library.PlayerAtribs.player_level = playerinst.level\r\n        library.PlayerAtribs.player_bonus = playerinst.bonus\r\n        library.PlayerAtribs.player_wallet = playerinst.wallet\r\n        library.PlayerAtribs.player_race = playerinst.race.title()\r\n        library.PlayerAtribs.player_race2 = playerinst.race2.title()\r\n        library.PlayerAtribs.player_klass = playerinst.klass.title()\r\n        library.PlayerAtribs.player_klass2 = playerinst.klass2.title()\r\n        library.PlayerAtribs.player_sack = playerinst.sack\r\n        library.PlayerAtribs.player_l_hand = playerinst.update_bindings(\"L_hand\")\r\n        library.PlayerAtribs.player_r_hand = playerinst.update_bindings(\"R_hand\")\r\n        library.PlayerAtribs.player_two_hand = playerinst.update_bindings(\"two_hand\")\r\n        library.PlayerAtribs.player_headgear = playerinst.update_bindings(\"headgear\")\r\n        library.PlayerAtribs.player_armor = playerinst.update_bindings(\"armor\")\r\n        library.PlayerAtribs.player_knees = playerinst.update_bindings(\"knees\")\r\n        library.PlayerAtribs.player_footgear = playerinst.update_bindings(\"footgear\")\r\n        library.PlayerAtribs.player_necklace = playerinst.update_bindings(\"necklace\")\r\n\r\n# card handling class:\r\n\r\n    def deal_handler(self, option, deal_amount=0):\r\n        \"\"\" Sends requests to the dealer based on the option parameter to define card type.\r\n        Deal_amount defines how many of the cards are to be returned to a player.\r\n        \"\"\"\r\n\r\n        playerinst = library.GameObjects.active_player # gets current player. Not set at start default=None.\r\n\r\n        if option == \"start\": # initial play selector to deal cards to each player. NO GOOD FOR RESURRECT OPTION as deals to all players\r\n            for player in library.GameObjects.session_players: # loops over each player in session_players\r\n                player.sack = cards.card_sop.deal_cards(option, cardnum=library.Options.cards_dealt) # deals cards with params \"start\" & num of cards to deal)\r\n\r\n        elif option == \"door\": # Standard gameplay loop on door kick\r\n            print(\"In deal_handler, retrieving door card & determining fate of card\")  # test location\r\n            door_card = cards.card_sop.deal_cards(option, cardnum=1) # fetches 1 door card,\r\n            return door_card # for pic use only in gui\r\n\r\n        elif option == \"treasure\": # Deal treasure, requires number for amount to deal.\r\n            print(\"retrieving treasure card/s\") # test location\r\n            add_treasure = cards.card_sop.deal_cards(option, cardnum=deal_amount) # cardnum is usually determined by the treasures a monster holds.\r\n            playerinst.sack = playerinst.sack + add_treasure # DUMPS ALL IN THE ACTIVE_PLAYER.....TODO::Sort how treasure is handled when used as currency for another players help\r\n\r\n        elif option == \"resurrect\":\r\n            if library.Options.perm_death:\r\n                playerinst.sack = cards.card_sop.deal_cards(\"start\", cardnum=library.Options.cards_dealt)\r\n            else:\r\n                print(f\"Game over for {playerinst.name}, BUMMER!\")\r\n\r\n        else:\r\n            print(\"option parameter not defined/matched in deal_handler\")\r\n\r\n    def door_card_designator(self, card, door_attempts=1): # for all door cards that are drawn from the pack or placed by another player.\r\n        \"\"\"Takes in door card and door_attempts as params to decide card fate.\r\n        Cards have different fates dependent upon the type of card it is ie: monster, curse, other and the number of\r\n        times the door button is clicked. Also update the message dependent on action\r\n        \"\"\"\r\n        player = library.GameObjects.active_player\r\n\r\n        if door_attempts: #On first kick of the door. Decides what to do with the cards dependent on situation\r\n\r\n            # if monster, put on table ready to fight\r\n            if card.get(\"type\") == \"monster\": # if the cards a monster #1st/2nd kicks covered\r\n                library.GameObjects.message = f\"{card.get('name')} placed on table, Level {card.get('lvl')}\" # updates broadcast message\r\n                cards.in_play[0].append(card) # places card on table in the lol for the first fight.\r\n\r\n                player.card_meths(card, static='on') # activates any static meths for the card\r\n                # print(f'player in game:: {player.name}')\r\n                # print(\"This is the card in play;\", cards.in_play, 'id', id(cards.in_play)) # TEST INFO\r\n\r\n\r\n            # WORK REQUIRED!!     if curse, activate effects. need check to see if conditions in place to stop cursing ie ork/ wishing ring.\r\n            elif card.get(\"type\") == \"curse\": # if the cards a monster #1st/2nd kicks covered\r\n                library.GameObjects.message = f\"The room you have entered has a curse {card.get('name').title()}.\\n Lets hope you have protection!\"\r\n                print(\"In curse::\", player.active_curses)\r\n                # ~~~~~~~~~~~~~TODO  curse checker method required ie tin hat, ork ect\r\n                if card.get(\"duration\") == \"persistent\": # for constant effect curse\r\n                    player.card_meths(card, \"method\", \"on\") # switches card on.\r\n                    player.active_curses.append(card) # adds card to player curse list so method can be called o remove\r\n                elif card.get(\"duration\") == \"one_shot\": ########### matches card key to the one_shot action\r\n                    player.card_meths(card, \"method\", \"on\")  ########## calls card method and switches it on TO BE REMOVED\r\n                    cards.burn_pile.append(card) # disposes of to burn pile\r\n                    print(f\"card duration is one_shot, added to burn pile check:\\nBurn pile {cards.burn_pile}\")\r\n                elif card.get(\"duration\") == \"timed\": ########## for time dependent effect\r\n                    library.GameObjects.message = f\"timed curse card not configured yet\" # overrides top message\r\n                    #TODO meth for timed\r\n                    cards.burn_pile.append(card) # disposes of to burn pile\r\n                    print(f\"card status is passive, should be added to burn pile!\\nBurn pile {cards.burn_pile}\")\r\n\r\n            else: # for all other cards that have no direct effect or influence.\r\n                print(f\"Adding {card['name']}to sack.\")\r\n                player.sack.append(card)  # adds card to player's items\r\n                library.GameObjects.message = f\"Adding 2nd draw to sack.\" # need to be removed dont want to broadcast what other player gets\r\n                return card  # to show if first time only 2nd it hides\r\n\r\n        else:\r\n            \"2nd kick of door (looting room). Will need condition statement if player wants to fight mon from hand, rather than std flow to sack\"\r\n            print(\"adding to sack\")\r\n            library.GameObjects.message = \"2nd kck, Adding card to sack\"  # 2nd kick\r\n            player.sack.append(card)  # adds to player sack\r\n\r\n    def zipper(self, action):\r\n        \"\"\"zips card id's to checkbox bools from selected_list. Used for all card sorting regardless of card type.\r\n        action is conduit for card_matcher\"\"\"\r\n        library.GameObjects.zipped_tup.clear()  # clears tup list ready for new entry. not working...................\r\n        for status in library.GameObjects.check_but_intvar_gen: # gets attribute from object then from the attribute which is an object gets the value stored (list>intvar>get()>1 or 0)\r\n            library.GameObjects.check_but_boo.append(status.get()) # creates a list of 1s & 0s from check buttons status\r\n            x, y = library.GameObjects.check_but_card_ids, library.GameObjects.check_but_boo\r\n            library.GameObjects.zipped_tup = list(zip(x, y)) # result [(card_id,  bool), (card_id, bool)]\r\n        # print(\"moving to player script\", gameVar.GameObjects.zipped_tup) # checker shows all cleared lists\r\n        self.card_matcher(action)\r\n\r\n    def card_matcher(self, action):\r\n        \"\"\"compares tuple to selected_items searching for matching card ids and only passes on cards that contain\r\n        a tuple with the boolean true. Action determines the whats happening to the cards next. \"\"\"\r\n        for card in library.GameObjects.selected_items: # for every card in selected_items\r\n            for tup in library.GameObjects.zipped_tup: # go over every tuple in  zipped_tup. (card_id, bool tuples).\r\n                if tup[0] == card[\"id\"] and tup[1]: # if tup id matches card fid from selected items and bool is True from the checkbox\r\n                    if action == \"sell\":\r\n                        library.GameObjects.active_player.sell_item(card)\r\n                    elif action in \"equip, disposable ,use\": # equip/disposable will be treasures\r\n                        self.tri_qualifier(card) # test ~~ok~~\r\n                    elif action == \"remove\":\r\n                        player = library.GameObjects.active_player\r\n                        player.equipped_items(\"removal\", card)\r\n\r\n    def tri_qualifier(self, card):\r\n        \"\"\" Checks player attribs against an item card before it can be used by the player. Split into 2 parts:\r\n        1st: checks card for a specific restriction that would count against a player due to a specific attrib, ie if u are human u cant use this card.\r\n        2nd part: \"\"\"\r\n\r\n        player = library.GameObjects.active_player\r\n\r\n        checks = {player.race: \"race_requirement\", player.race2: \"race_requirement\", player.klass: \"klass_requirement\",\r\n                  player.klass2: \"klass_requirement\", player.gender: \"gender_requirement\"} # card specific requirements to use\r\n        flag = 1 # True\r\n\r\n        for player_attribs, card_requirement in checks.items():\r\n            # checks card restrict method lexical for non use cases. If found player cant use.\r\n            if card.get('restriction', False): # checks to see if there is a key named 'restriction' in card if not return False\r\n                print(\"Searching card restriction method\")\r\n                if player_attribs in card.get('restriction'):  # checks all player attribs to see if in restricted treasure card list #\r\n                    # THINK ABOUT CARDS YOU ARE APPLYING THEM TOO; TREASURE!\r\n                    print('Restriction found in card')\r\n                    if player.name == \"The_Creator\":  # dev mode\r\n                        print(f\"{player_attribs} - Restriction avoided: Dev path\")\r\n                        break\r\n                    else: # sets flag so card cant be used\r\n                        print('Restricted, card cant be used.')\r\n                        flag = 0\r\n                        break\r\n            # checks cards for player dependent attribs to use card\r\n            if card.get(card_requirement):  # checks card to see if requirement present\r\n                if card.get(card_requirement) == player_attribs: # if race_requirement = 'human' == player.race = 'human' change flag and break out of loop\r\n                    print(f\"Main path for: {card_requirement}\")\r\n                    continue # checks next requirement parameter for conformance\r\n                elif player.name == \"The_Creator\":  # dev mode\r\n                    print(f\"{player_attribs} - Dev path\")\r\n                    continue\r\n                else:\r\n                    library.GameObjects.message = f\"You cant use this card, {card_requirement}\"\r\n                    flag = 0\r\n                    # gameVar.StartVariables.message = f\"{card.get('name')} can not be quipped: {val}.\" # not working\r\n                    break\r\n\r\n        if flag: # only if flag remains True, compliant to non restrictions.\r\n            if card[\"category\"] == \"treasure\":  # for all treasure cards the player uses that was from their hand\r\n                self.player_treasure_cards(card) # for the use of treasure cards\r\n            # elif card[\"category\"] == \"door\":  # for all enhancers ect that the player has from their hand  DO DOOR CARDS REALLY COME DOWN THIS ROUTE! however thowables???\r\n            #     self.player_door_cards(card) # for the use of door cards\r\n\r\n    def player_treasure_cards(self, card):\r\n        \"\"\"method to sort the locations of treasure cards that the player has selected\"\"\"\r\n        player = library.GameObjects.active_player\r\n        if card.get(\"type\") == \"armor\":\r\n            player.equip_armor(card)  # leads to player meth for placing in right place\r\n        elif card.get(\"type\") == \"weapon\":\r\n            player.equip_weapon(card)\r\n        elif card.get(\"type\") == \"disposable\":  # for disposable throwable only\r\n            pass  # meth for selecting target and changing bonuses, # TODO\r\n        else:\r\n            pass # for all other cards ie steeds\r\n\r\n    def player_door_cards(self, card): #card meth#####################################################\r\n        player = library.GameObjects.active_player\r\n        player.card_meths(card, \"method\", \"on\")  # link to player to card meths.\r\n        print(player.klass_unlock, player.race_unlock)  # only shows at end of turn due to meth restriction in class,\r\n        # meths added at end_turn\r\n\r\n    def scrub_lists(self):\r\n        \"\"\"Clears all appended list that are not capable of clearing.\"\"\"\r\n        library.GameObjects.selected_items.clear()  # clears the card objects list\r\n        library.GameObjects.check_but_intvar_gen.clear()  # clears list of intVar objects from check buttons\r\n        library.GameObjects.check_but_boo.clear()  # clears boolean list\r\n        library.GameObjects.check_but_card_ids.clear()  # clears card id list\r\n        library.GameObjects.zipped_tup.clear()  # clears tup list\r\n\r\n##################################################################\r\n    def fight(self, helper=0, additional=0):# helper would be other player interactions. additional is anything else\r\n        \"\"\"for cards that are monsters and placed on the table\"\"\"\r\n        print(\"In the fight!\")\r\n        card = cards.in_play.pop() # end of cards on table\r\n        player = library.GameObjects.active_player\r\n        player.card_meths(card, 'static', 'on') # turns on card static content for fight TODO change to something more relevant than \"static\"\r\n        if player.bonus + player.level + helper + library.Fight_enhancers.player_aid \\\r\n                >= card[\"lvl\"] + library.Fight_enhancers.monster_aid: # consideration required for player consumables and enhancers\r\n            print(\"Player wins!\")\r\n            reward = card['treasure']\r\n            self.deal_handler('treasure', deal_amount=reward) # fetches treasure for player\r\n            library.GameObjects.message = f\"You win! You have found {reward} treasures for your trouble.\"\r\n            player.level += card[\"level_up\"]\r\n            cards.burn_pile.append(card) # removes card\r\n            player.card_meths(card, 'static', 'off') # turns off static card content\r\n            print(f\"cards in the burn pile: {len(cards.burn_pile)}\")\r\n            return \"win\"\r\n        # need action to go up lvl note some cards do more than one level!\r\n        else:\r\n            library.GameObjects.message = \"Fight lost\"\r\n            print(\"Fight lost\")\r\n            player.card_meths(card, 'method', 'on') # calls card bad stuff\r\n            player.card_meths(card, 'static', 'off') # turns off static effect of card in play\r\n            return \"lose\"\r\n\r\n    def card_method_activator(self, scenario, action, table_card_index): # will need to be a selector\r\n        \"\"\"method to activate a card dependent upon the scenario of having a specific monster/ curse/ item in play and action to\r\n        switch on or off the condition\"\"\"\r\n        card = cards.in_play[int(table_card_index)][0] # selects the monster in the fight on the table\r\n        player = library.GameObjects.active_player\r\n        if scenario == \"persistent\":\r\n            player.card_meths(card, 'static', action)  ######## will cause probs with monster individuality ######################\r\n\r\n    def run(self):\r\n        roll = dice.dice_sop.roll()\r\n        player = library.GameObjects.active_player\r\n        print(f\"You rolled a {roll}.\")\r\n        if roll >= player.run:\r\n            print(f\"You rolled a {roll}. You out ran your pursuer.\")\r\n            remove = cards.in_play.pop(0)\r\n            player.card_meths(remove, 'static', 'off')# turns off static card content\r\n            cards.burn_pile.append(remove)\r\n            return \"success\"\r\n        else:\r\n            print(\"Tried to run and slipped. Things are gona get ugly!\\n\")\r\n            # only fight is available now so that cna handle all the logic\r\n            return \"fail\"\r\n\r\n\r\nengine = PlayerSetUp()\r\n\r\nif __name__ == \"__main__\":\r\n\r\n    # NumberOfPlayers().select_players() # starts game by activating NOP building the objects, and activating select_players\r\n    # running wach line.\r\n    engine.player_name_gender()\r\n\r\n\r\n\r\n\r\n\r\n\r\n# old\r\n# def door_card_designator(self, card, door_attempts=1):  # for all door cards that are drawn from the pack\r\n#     \"\"\"method that sort the cards that the player draws from the deck during play. This could be monster, curse ect.\r\n#     door0-attempts is used to determine how many times the door has been kicked in a turn and in 2nd instance the door is put into the\r\n#     players hand unseen. Mechanism is also used to trigger a curse\r\n#     \"\"\"\r\n#     player = gameVar.GameObjects.active_player\r\n#\r\n#     if door_attempts:\r\n#         if card.get(\"type\") == \"monster\":  # if the cards a monster #1st/2nd kicks covered\r\n#             if door_attempts:  # determines if first kick of door (T or F), if 1 = first kick\r\n#                 gameVar.GameObjects.message = f\"{card.get('name')} placed on table, Level {card.get('lvl')}\"\r\n#                 cards.in_play.append(\r\n#                     card)  # adds to table # careful as cards selected from hand will go strait to table\r\n#                 print(\r\n#                     f\"In door_card_designator, monster added to table. Returned card is: {[x['name'] for x in cards.in_play]}\\n\")\r\n#             else:\r\n#                 print(\"adding to sack\")\r\n#                 gameVar.GameObjects.message = \"Adding card to sack\"  # 2nd kick\r\n#                 player.sack.append(card)  # adds to player sack\r\n#\r\n#         elif card.get(\"type\") == \"curse\":  # if the cards a monster #1st/2nd kicks covered\r\n#             if door_attempts:  # 1st kick\r\n#                 print(\"In curse::\", player.curses)\r\n#                 gameVar.GameObjects.message = \"You have been cursed!\"  # look at card meth and action\r\n#                 player.card_meths(card, \"method\", \"on\")  # actions curs card as soon as picked up\r\n#                 if card.get(\"status\") == \"active\":  # for constant effect curse\r\n#                     player.curses.append(card)  # adds card to player curse list\r\n#                 elif card.get(\"status\") == \"passive\":  # for one shot effect\r\n#                     cards.burn_pile.append(card)  # disposes of to burn pile\r\n#                     print(f\"card status is passive, should be added to burn pile!\\nBurn pile {cards.burn_pile}\")\r\n#             else:\r\n#                 gameVar.GameObjects.message = \"Adding card to sack\"\r\n#                 player.sack.append(card)\r\n#\r\n#         else:  # for all other cards that have no direct effect or influence.\r\n#             print(f\"Adding {card['name']}to sack.\")\r\n#             if door_attempts:\r\n#                 player.sack.append(card)  # adds card to player's items\r\n#                 gameVar.GameObjects.message = f\"Adding/using {card.get('name')}.\"\r\n#                 return card  # to show if first time only 2nd it hides\r\n#             else:\r\n#                 gameVar.GameObjects.message = \"Adding 2nd card to sack\"\r\n#                 player.sack.append(card)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Munchkin/bin/engine/controller.py b/Munchkin/bin/engine/controller.py
--- a/Munchkin/bin/engine/controller.py	(revision 4425b3031dd49e788c84bb51d68eb5167dccec7f)
+++ b/Munchkin/bin/engine/controller.py	(date 1650564384801)
@@ -175,7 +175,7 @@
                     library.GameObjects.message = f"timed curse card not configured yet" # overrides top message
                     #TODO meth for timed
                     cards.burn_pile.append(card) # disposes of to burn pile
-                    print(f"card status is passive, should be added to burn pile!\nBurn pile {cards.burn_pile}")
+                    print(f"card status is passive, should be added to burn pile!\nBurn pile {cards.burn_pile}"),
 
             else: # for all other cards that have no direct effect or influence.
                 print(f"Adding {card['name']}to sack.")
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ChangeListManager\">\r\n,    <list default=\"true\" id=\"e89d33e8-f65b-4c0f-9d3f-1de9856c0ba0\" name=\"Changes\" comment=\"V4 starting for new player factory, fight mechanics, naming, dependencies ect\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/MyPackages.iml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/MyPackages.iml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Munchkin/bin/GUI/variables_library.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Munchkin/bin/GUI/variables_library.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Munchkin/bin/GUI/view.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Munchkin/bin/GUI/view.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Munchkin/bin/all_cards/door_cards/doorcards.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Munchkin/bin/all_cards/door_cards/doorcards.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Munchkin/bin/engine/controller.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Munchkin/bin/engine/controller.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Munchkin/bin/players/playermodel.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Munchkin/bin/players/playermodel.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"FlaskConsoleOptions\" custom-start-script=\"import sys&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo&#10;locals().update(ScriptInfo(create_app=None).load_app().make_shell_context())&#10;print(&quot;Python %s on %s\\nApp: %s [%s]\\nInstance: %s&quot; % (sys.version, sys.platform, app.import_name, app.env, app.instance_path))\">\r\n    <envs>\r\n      <env key=\"FLASK_APP\" value=\"app\" />\r\n    </envs>\r\n    <option name=\"myCustomStartScript\" value=\"import sys&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo&#10;locals().update(ScriptInfo(create_app=None).load_app().make_shell_context())&#10;print(&quot;Python %s on %s\\nApp: %s [%s]\\nInstance: %s&quot; % (sys.version, sys.platform, app.import_name, app.env, app.instance_path))\" />\r\n    <option name=\"myEnvs\">\r\n      <map>\r\n        <entry key=\"FLASK_APP\" value=\"app\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"c337df6bf96242b546d988dfe8155e55f28051be\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitSEFilterConfiguration\">\r\n    <file-type-list>\r\n      <filtered-out-file-type name=\"LOCAL_BRANCH\" />\r\n      <filtered-out-file-type name=\"REMOTE_BRANCH\" />\r\n      <filtered-out-file-type name=\"TAG\" />\r\n      <filtered-out-file-type name=\"COMMIT_BY_MESSAGE\" />\r\n    </file-type-list>\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"228V1szxqWwIqe83W3F9S3jTuGo\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"ASKED_ADD_EXTERNAL_FILES\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$/../Learning_files\" />\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Python.view\">\r\n    <configuration name=\"controller\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"MyPackages\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/Munchkin/bin/GUI\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/Munchkin/bin/GUI/controller.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"doorcards\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"MyPackages\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/Munchkin/bin/all_cards/door_cards\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/Munchkin/bin/all_cards/door_cards/doorcards.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"funct_trial\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"MyPackages\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/funct_trial.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"game_loop_v3\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"MyPackages\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/Munchkin/bin/engine\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/Munchkin/bin/engine/game_loop_v3.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"view\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"MyPackages\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/Munchkin/bin/GUI\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/Munchkin/bin/GUI/view.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <list>\r\n      <item itemvalue=\"Python.view\" />\r\n      <item itemvalue=\"Python.game_loop_v3\" />\r\n      <item itemvalue=\"Python.controller\" />\r\n      <item itemvalue=\"Python.funct_trial\" />\r\n      <item itemvalue=\"Python.doorcards\" />\r\n    </list>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Python.view\" />\r\n        <item itemvalue=\"Python.funct_trial\" />\r\n        <item itemvalue=\"Python.game_loop_v3\" />\r\n        <item itemvalue=\"Python.doorcards\" />\r\n        <item itemvalue=\"Python.controller\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"e89d33e8-f65b-4c0f-9d3f-1de9856c0ba0\" name=\"Changes\" comment=\"\" />\r\n      <created>1639218994311</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1639218994311</updated>\r\n      <workItem from=\"1639218997657\" duration=\"35269000\" />\r\n      <workItem from=\"1639735508330\" duration=\"18975000\" />\r\n      <workItem from=\"1640013914970\" duration=\"13331000\" />\r\n      <workItem from=\"1640513559951\" duration=\"433000\" />\r\n      <workItem from=\"1640952454199\" duration=\"648000\" />\r\n      <workItem from=\"1649103067776\" duration=\"360000\" />\r\n      <workItem from=\"1649237457571\" duration=\"2195000\" />\r\n      <workItem from=\"1649273824130\" duration=\"6676000\" />\r\n      <workItem from=\"1649938477233\" duration=\"1987000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"update to card date structure\">\r\n      <created>1639844962852</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1639844962852</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"changes image recall file structure to handle different os with pathlib module\">\r\n      <created>1649255260546</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1649255260546</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"changes image recall file structure to handle different os with pathlib module\">\r\n      <created>1649273835279</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1649273835279</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"docs\">\r\n      <created>1649280322103</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1649280322103</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"docs\">\r\n      <created>1649619777519</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1649619777519</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"renaming scripts\">\r\n      <created>1650360756678</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1650360756678</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"V4 starting for new player factory, fight mechanics, naming, dependencies ect\">\r\n      <created>1650380422544</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1650380422544</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"8\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\r\n    <MESSAGE value=\"update to card date structure\" />\r\n    <MESSAGE value=\"changes image recall file structure to handle different os with pathlib module\" />\r\n    <MESSAGE value=\"docs\" />\r\n    <MESSAGE value=\"renaming scripts\" />\r\n    <MESSAGE value=\"V4 starting for new player factory, fight mechanics, naming, dependencies ect\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"V4 starting for new player factory, fight mechanics, naming, dependencies ect\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\r\n          <url>file://$PROJECT_DIR$/Munchkin/bin/GUI/view.py</url>\r\n          <line>452</line>\r\n          <option name=\"timeStamp\" value=\"39\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\r\n          <url>file://$PROJECT_DIR$/Munchkin/bin/engine/controller.py</url>\r\n          <line>327</line>\r\n          <option name=\"timeStamp\" value=\"40\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/gui_v3_py$controller.coverage\" NAME=\"controller Coverage Results\" MODIFIED=\"1616616433552\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/Munchkin/bin/GUI\" />\r\n    <SUITE FILE_PATH=\"coverage/Working_git_projects$server.coverage\" NAME=\"server Coverage Results\" MODIFIED=\"1607734550477\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/../PycharmProjects/2-Modules/Networking/basics\" />\r\n    <SUITE FILE_PATH=\"coverage/gui_v3_py$doorcards.coverage\" NAME=\"doorcards Coverage Results\" MODIFIED=\"1617305583240\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/Munchkin/bin/all_cards/door_cards\" />\r\n    <SUITE FILE_PATH=\"coverage/MyPackages$funct_trial.coverage\" NAME=\"funct_trial Coverage Results\" MODIFIED=\"1640967852670\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\r\n    <SUITE FILE_PATH=\"coverage/Working_git_projects$cascading_frames.coverage\" NAME=\"cascading_frames Coverage Results\" MODIFIED=\"1606569227994\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/../PycharmProjects/2-Modules/TK_GUI/methods\" />\r\n    <SUITE FILE_PATH=\"coverage/MyPackages$controller.coverage\" NAME=\"controller Coverage Results\" MODIFIED=\"1640976909484\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/Munchkin/bin/GUI\" />\r\n    <SUITE FILE_PATH=\"coverage/gui_v3_py$test_engine.coverage\" NAME=\"test_engine Coverage Results\" MODIFIED=\"1614457569538\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/Munchkin/Tests/testengine\" />\r\n    <SUITE FILE_PATH=\"coverage/gui_v3_py$game_loop_v3.coverage\" NAME=\"game_loop_v3 Coverage Results\" MODIFIED=\"1615720610908\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/Munchkin/bin/engine\" />\r\n    <SUITE FILE_PATH=\"coverage/Working_git_projects$game_loop_v3.coverage\" NAME=\"game_loop_v3 Coverage Results\" MODIFIED=\"1649621688034\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/Munchkin/bin/engine\" />\r\n    <SUITE FILE_PATH=\"coverage/Working_git_projects$components.coverage\" NAME=\"components Coverage Results\" MODIFIED=\"1606571460461\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/../PycharmProjects/2-Modules/TK_GUI/methods\" />\r\n    <SUITE FILE_PATH=\"coverage/Munch$general_tests.coverage\" NAME=\"general_tests Coverage Results\" MODIFIED=\"1649253557839\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/Munchkin/Tests\" />\r\n    <SUITE FILE_PATH=\"coverage/Munch$view.coverage\" NAME=\"view Coverage Results\" MODIFIED=\"1650458453729\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/Munchkin/bin/GUI\" />\r\n    <SUITE FILE_PATH=\"coverage/gui_v3_py$game_loop_v2.coverage\" NAME=\"game_loop_v2 Coverage Results\" MODIFIED=\"1614508656597\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/Munchkin/bin/engine\" />\r\n    <SUITE FILE_PATH=\"coverage/Working_git_projects$general_tests.coverage\" NAME=\"general_tests Coverage Results\" MODIFIED=\"1649624272820\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/Munchkin/Tests\" />\r\n    <SUITE FILE_PATH=\"coverage/Working_git_projects$controller.coverage\" NAME=\"controller Coverage Results\" MODIFIED=\"1649971184886\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/Munchkin/bin/GUI\" />\r\n    <SUITE FILE_PATH=\"coverage/gui_v3_py$run.coverage\" NAME=\"run Coverage Results\" MODIFIED=\"1617043566223\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\r\n    <SUITE FILE_PATH=\"coverage/Working_git_projects$gui_v3.coverage\" NAME=\"gui_v3 Coverage Results\" MODIFIED=\"1606573299996\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/Munchkin/bin/GUI\" />\r\n    <SUITE FILE_PATH=\"coverage/Munch$funct_trial.coverage\" NAME=\"funct_trial Coverage Results\" MODIFIED=\"1650457265508\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\r\n    <SUITE FILE_PATH=\"coverage/gui_v3_py$gui_variables.coverage\" NAME=\"gui_variables Coverage Results\" MODIFIED=\"1616964872872\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/Munchkin/bin/GUI\" />\r\n    <SUITE FILE_PATH=\"coverage/gui_v3_py$gui_v3.coverage\" NAME=\"gui_v3 Coverage Results\" MODIFIED=\"1612123491582\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/Munchkin/bin/GUI\" />\r\n    <SUITE FILE_PATH=\"coverage/Working_git_projects$view.coverage\" NAME=\"view Coverage Results\" MODIFIED=\"1650487568351\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/Munchkin/bin/GUI\" />\r\n    <SUITE FILE_PATH=\"coverage/Working_git_projects$doorcards.coverage\" NAME=\"doorcards Coverage Results\" MODIFIED=\"1649275056101\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/Munchkin/bin/all_cards/door_cards\" />\r\n    <SUITE FILE_PATH=\"coverage/Working_git_projects$client.coverage\" NAME=\"client Coverage Results\" MODIFIED=\"1607734581411\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/../PycharmProjects/2-Modules/Networking/basics\" />\r\n    <SUITE FILE_PATH=\"coverage/gui_v3_py$controler.coverage\" NAME=\"controler Coverage Results\" MODIFIED=\"1614511168277\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/Munchkin/bin/GUI\" />\r\n    <SUITE FILE_PATH=\"coverage/gui_v3_py$pic_test.coverage\" NAME=\"pic_test Coverage Results\" MODIFIED=\"1616512660881\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/../PycharmProjects/2-Modules/TK_GUI/Tool_box\" />\r\n    <SUITE FILE_PATH=\"coverage/gui_v3_py$controller__1_.coverage\" NAME=\"controller (1) Coverage Results\" MODIFIED=\"1639218287704\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/Munchkin/bin/GUI\" />\r\n    <SUITE FILE_PATH=\"coverage/MyPackages$doorcards.coverage\" NAME=\"doorcards Coverage Results\" MODIFIED=\"1639811290752\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/Munchkin/bin/all_cards/door_cards\" />\r\n    <SUITE FILE_PATH=\"coverage/Munch$controller.coverage\" NAME=\"controller Coverage Results\" MODIFIED=\"1649254694799\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/Munchkin/bin/GUI\" />\r\n    <SUITE FILE_PATH=\"coverage/Munch$doorcards.coverage\" NAME=\"doorcards Coverage Results\" MODIFIED=\"1649279228321\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/Munchkin/bin/all_cards/door_cards\" />\r\n    <SUITE FILE_PATH=\"coverage/Working_git_projects$funct_trial.coverage\" NAME=\"funct_trial Coverage Results\" MODIFIED=\"1640985624373\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\r\n    <SUITE FILE_PATH=\"coverage/Munch$game_loop_v3.coverage\" NAME=\"game_loop_v3 Coverage Results\" MODIFIED=\"1649605889035\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/Munchkin/bin/engine\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 4425b3031dd49e788c84bb51d68eb5167dccec7f)
+++ b/.idea/workspace.xml	(date 1650705919300)
@@ -1,15 +1,9 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ChangeListManager">
-,    <list default="true" id="e89d33e8-f65b-4c0f-9d3f-1de9856c0ba0" name="Changes" comment="V4 starting for new player factory, fight mechanics, naming, dependencies ect">
-      <change beforePath="$PROJECT_DIR$/.idea/MyPackages.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/MyPackages.iml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+    <list default="true" id="e89d33e8-f65b-4c0f-9d3f-1de9856c0ba0" name="Changes" comment="method working for card_meths and activating monster cars static meths">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Munchkin/bin/GUI/variables_library.py" beforeDir="false" afterPath="$PROJECT_DIR$/Munchkin/bin/GUI/variables_library.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Munchkin/bin/GUI/view.py" beforeDir="false" afterPath="$PROJECT_DIR$/Munchkin/bin/GUI/view.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Munchkin/bin/all_cards/door_cards/doorcards.py" beforeDir="false" afterPath="$PROJECT_DIR$/Munchkin/bin/all_cards/door_cards/doorcards.py" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/Munchkin/bin/engine/controller.py" beforeDir="false" afterPath="$PROJECT_DIR$/Munchkin/bin/engine/controller.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Munchkin/bin/players/playermodel.py" beforeDir="false" afterPath="$PROJECT_DIR$/Munchkin/bin/players/playermodel.py" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -49,6 +43,9 @@
       <filtered-out-file-type name="TAG" />
       <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
     </file-type-list>
+  </component>
+  <component name="MarkdownSettingsMigration">
+    <option name="stateVersion" value="1" />
   </component>
   <component name="ProjectId" id="228V1szxqWwIqe83W3F9S3jTuGo" />
   <component name="ProjectLevelVcsManager" settingsEditedManually="true">
@@ -260,7 +257,14 @@
       <option name="project" value="LOCAL" />
       <updated>1650380422544</updated>
     </task>
-    <option name="localTasksCounter" value="8" />
+    <task id="LOCAL-00008" summary="method working for card_meths and activating monster cars static meths">
+      <created>1650487858621</created>
+      <option name="number" value="00008" />
+      <option name="presentableId" value="LOCAL-00008" />
+      <option name="project" value="LOCAL" />
+      <updated>1650487858621</updated>
+    </task>
+    <option name="localTasksCounter" value="9" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -284,14 +288,15 @@
     <MESSAGE value="docs" />
     <MESSAGE value="renaming scripts" />
     <MESSAGE value="V4 starting for new player factory, fight mechanics, naming, dependencies ect" />
-    <option name="LAST_COMMIT_MESSAGE" value="V4 starting for new player factory, fight mechanics, naming, dependencies ect" />
+    <MESSAGE value="method working for card_meths and activating monster cars static meths" />
+    <option name="LAST_COMMIT_MESSAGE" value="method working for card_meths and activating monster cars static meths" />
   </component>
   <component name="XDebuggerManager">
     <breakpoint-manager>
       <breakpoints>
         <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
           <url>file://$PROJECT_DIR$/Munchkin/bin/GUI/view.py</url>
-          <line>452</line>
+          <line>454</line>
           <option name="timeStamp" value="39" />
         </line-breakpoint>
         <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
@@ -323,7 +328,7 @@
     <SUITE FILE_PATH="coverage/Munch$funct_trial.coverage" NAME="funct_trial Coverage Results" MODIFIED="1650457265508" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
     <SUITE FILE_PATH="coverage/gui_v3_py$gui_variables.coverage" NAME="gui_variables Coverage Results" MODIFIED="1616964872872" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/Munchkin/bin/GUI" />
     <SUITE FILE_PATH="coverage/gui_v3_py$gui_v3.coverage" NAME="gui_v3 Coverage Results" MODIFIED="1612123491582" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/Munchkin/bin/GUI" />
-    <SUITE FILE_PATH="coverage/Working_git_projects$view.coverage" NAME="view Coverage Results" MODIFIED="1650487568351" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/Munchkin/bin/GUI" />
+    <SUITE FILE_PATH="coverage/Working_git_projects$view.coverage" NAME="view Coverage Results" MODIFIED="1650488356761" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/Munchkin/bin/GUI" />
     <SUITE FILE_PATH="coverage/Working_git_projects$doorcards.coverage" NAME="doorcards Coverage Results" MODIFIED="1649275056101" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/Munchkin/bin/all_cards/door_cards" />
     <SUITE FILE_PATH="coverage/Working_git_projects$client.coverage" NAME="client Coverage Results" MODIFIED="1607734581411" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/../PycharmProjects/2-Modules/Networking/basics" />
     <SUITE FILE_PATH="coverage/gui_v3_py$controler.coverage" NAME="controler Coverage Results" MODIFIED="1614511168277" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/Munchkin/bin/GUI" />
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" project-jdk-name=\"Python 3.8\" project-jdk-type=\"Python SDK\" />\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 4425b3031dd49e788c84bb51d68eb5167dccec7f)
+++ b/.idea/misc.xml	(date 1650564385024)
@@ -1,4 +1,4 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.8" project-jdk-type="Python SDK" />
+  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.8 (venv)" project-jdk-type="Python SDK" />
 </project>
\ No newline at end of file
Index: .idea/MyPackages.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module type=\"PYTHON_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\">\r\n    <content url=\"file://$MODULE_DIR$\">\r\n      <sourceFolder url=\"file://$MODULE_DIR$/Munchkin\" isTestSource=\"false\" />\r\n      <excludeFolder url=\"file://$MODULE_DIR$/Games\" />\r\n      <excludeFolder url=\"file://$MODULE_DIR$/Munchkin/venv\" />\r\n    </content>\r\n    <orderEntry type=\"jdk\" jdkName=\"Python 3.8\" jdkType=\"Python SDK\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n  </component>\r\n  <component name=\"PyDocumentationSettings\">\r\n    <option name=\"format\" value=\"PLAIN\" />\r\n    <option name=\"myDocStringFormat\" value=\"Plain\" />\r\n  </component>\r\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/MyPackages.iml b/.idea/MyPackages.iml
--- a/.idea/MyPackages.iml	(revision 4425b3031dd49e788c84bb51d68eb5167dccec7f)
+++ b/.idea/MyPackages.iml	(date 1650564385002)
@@ -6,7 +6,7 @@
       <excludeFolder url="file://$MODULE_DIR$/Games" />
       <excludeFolder url="file://$MODULE_DIR$/Munchkin/venv" />
     </content>
-    <orderEntry type="jdk" jdkName="Python 3.8" jdkType="Python SDK" />
+    <orderEntry type="inheritedJdk" />
     <orderEntry type="sourceFolder" forTests="false" />
   </component>
   <component name="PyDocumentationSettings">
